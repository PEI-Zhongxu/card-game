import random

class Card:
    def __init__(self, suit_id, rank_id):
        self.rank_id = rank_id
        self.suit_id = suit_id

        if self.rank_id == 1:
            self.rank = "Ace"
            self.value = 1
        elif self.rank_id == 11:
            self.rank = "Jack"
            self.value = 10
        elif self.rank_id == 12:
            self.rank = "Queen"
            self.value = 10
        elif self.rank_id == 13:
            self.rank = "King"
            self.value = 10
        elif 2 <= self.rank_id <= 10:
            self.rank = str(self.rank_id)
            self.value = self.rank_id
        else:
            self.rank = "RankError"
            self.value = -1

        if self.suit_id == 1:
            self.suit = "Diamonds"
        elif self.suit_id == 2:
            self.suit = "Hearts"
        elif self.suit_id == 3:
            self.suit = "Spades"
        elif self.suit_id == 4:
            self.suit = "Clubs"
        else:
            self.suit = "SuitError"

        self.short_name = self.rank[0] + self.suit[0]
        if self.rank == '10':
            self.short_name = self.rank + self.suit[0]
        self.long_name = self.rank + " of " + self.suit

deck = []
p_hand = []
c_hand = []
up_card = None
active_suit = ""
active_rank = ""
blocked = 0


def init_cards():
    global deck, p_hand, c_hand, up_card, active_suit, active_rank

    deck = []
    for suit_id in range(1, 5):
        for rank_id in range(1, 14):
            new_card = Card(suit_id, rank_id)
            if new_card.rank_id == 8:
                new_card.value = 50
            deck.append(new_card)

    p_hand = []
    c_hand = []

    for _ in range(5):
        p_card = random.choice(deck)
        deck.remove(p_card)
        p_hand.append(p_card)

        c_card = random.choice(deck)
        deck.remove(c_card)
        c_hand.append(c_card)

    up_card = random.choice(deck)
    deck.remove(up_card)

    active_suit = up_card.suit
    active_rank = up_card.rank

    print("\nYour hand:")
    for card in p_hand:
        print(card.short_name, end=", ")
    print("\nUp card:", up_card.short_name)
    if up_card.rank == '8':
        print("Suit is", active_suit)


def player_turn():
    global deck, p_hand, blocked, up_card, active_suit
    print("\nYour hand:")
    for card in p_hand:
        print(card.short_name, end=", ")
    print("\nUp card:", up_card.short_name)
    if up_card.rank == '8':
        print("Suit is", active_suit)

    response = input("Type a card to play or 'Draw' to take a card: ")
    valid_play = False
    selected_card = None

    while not valid_play:
        if response.lower() == 'draw':
            if deck:
                card = random.choice(deck)
                p_hand.append(card)
                deck.remove(card)
                print("You drew", card.short_name)
            else:
                print("There are no cards left in the deck")
                blocked += 1
            return
        else:
            for card in p_hand:
                if response.upper() == card.short_name:
                    selected_card = card
                    break

        if not selected_card:
            response = input("You don't have that card. Try again: ")
            continue

        if selected_card.rank == '8' or selected_card.suit == active_suit or selected_card.rank == up_card.rank:
            valid_play = True
        else:
            response = input("That's not a legal play. Try again: ")
            selected_card = None

    p_hand.remove(selected_card)
    up_card = selected_card
    active_suit = selected_card.suit
    print("You played", selected_card.short_name)

    if selected_card.rank == '8':
        get_new_suit()


def get_new_suit():
    global active_suit
    while True:
        suit = input("Pick a suit: [D/H/S/C] ").lower()
        if suit == 'd':
            active_suit = "Diamonds"
        elif suit == 'h':
            active_suit = "Hearts"
        elif suit == 's':
            active_suit = "Spades"
        elif suit == 'c':
            active_suit = "Clubs"
        else:
            print("Invalid suit. Try again.")
            continue
        break
    print("You picked", active_suit)


def computer_turn():
    global c_hand, deck, up_card, active_suit, blocked
    options = []

    for card in c_hand:
        if card.rank == '8':
            c_hand.remove(card)
            up_card = card
            print("Computer played", card.short_name)

            suit_totals = [0, 0, 0, 0]
            for c in c_hand:
                suit_totals[c.suit_id - 1] += 1
            max_suit = suit_totals.index(max(suit_totals))

            active_suit = ["Diamonds", "Hearts", "Spades", "Clubs"][max_suit]
            print("Computer changed suit to", active_suit)
            return

        elif card.suit == active_suit or card.rank == up_card.rank:
            options.append(card)

    if options:
        best_play = max(options, key=lambda x: x.value)
        c_hand.remove(best_play)
        up_card = best_play
        active_suit = up_card.suit
        print("Computer played", best_play.short_name)
    else:
        if deck:
            next_card = random.choice(deck)
            c_hand.append(next_card)
            deck.remove(next_card)
            print("Computer drew a card")
        else:
            print("Computer is blocked")
            blocked += 1

    print("Computer has", len(c_hand), "cards left")


def deal_score_cards():
    return [random.randint(-10, 10) for _ in range(3)]


def play_game():
    global blocked
    p_total = 0
    c_total = 0
    done = False

    rounds = random.randint(1, 5)
    print(f"\n🔄 This game will last for {rounds} rounds.\n")

    for round_num in range(1, rounds + 1):
        print(f"\n=== Round {round_num} ===")
        game_done = False
        blocked = 0
        init_cards()

        while not game_done:
            player_turn()

            if len(p_hand) == 0:
                print("You Won!")
                points = sum(card.value for card in c_hand)
                p_total += points
                print("You got", points, "points from the computer's hand")
                game_done = True
                continue

            computer_turn()

            if len(c_hand) == 0:
                print("Computer Won!")
                points = sum(card.value for card in p_hand)
                c_total += points
                print("Computer got", points, "points from your hand")
                game_done = True
                continue

            if blocked >= 2:
                print("Both players blocked. GAME OVER.")
                p_points = sum(card.value for card in c_hand)
                c_points = sum(card.value for card in p_hand)
                p_total += p_points
                c_total += c_points
                print("You got", p_points, "points")
                print("Computer got", c_points, "points")
                game_done = True

        p_bonus = sum(deal_score_cards())
        c_bonus = sum(deal_score_cards())
        print(f"🎁 You received bonus points: {p_bonus}")
        print(f"🎁 Computer received bonus points: {c_bonus}")
        p_total += p_bonus
        c_total += c_bonus

    if p_total != c_total:
        multiplier_options = [0.5, 0.125, 2, 0.25]
        if p_total < c_total:
            print("\n🃏 You are behind! Choose a multiplier to try to turn the game around:")
            print("Options: 0.5, 0.125, 2, 0.25")
            try:
                factor = float(input("Your choice: "))
                if factor in multiplier_options:
                    p_total = int(p_total * factor)
                    print(f"Your score is now: {p_total}")
                else:
                    print("❌ Invalid multiplier. No change applied.")
            except ValueError:
                print("❌ Invalid input. No change applied.")
        else:
            factor = random.choice(multiplier_options)
            c_total = int(c_total * factor)
            print(f"\n🖥️ Computer was behind. It chose multiplier {factor}. New score: {c_total}")

    print("\n🏁 Final Score:")
    print(f"You: {p_total} points")
    print(f"Computer: {c_total} points")

    if p_total > c_total:
        print("🏆 You win overall!")
    elif p_total < c_total:
        print("🤖 Computer wins overall!")
    else:
        print("⚖️ It's a tie!")


if __name__ == "__main__":
    play_game()
